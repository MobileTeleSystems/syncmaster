services:
  db:
    image: postgres
    restart: unless-stopped
    env_file: .env.docker
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready
      start_period: 5s
      interval: 30s
      timeout: 5s
      retries: 3

  rabbitmq:
    image: rabbitmq
    restart: unless-stopped
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      start_period: 5s
      interval: 30s
      timeout: 5s
      retries: 3

  backend:
    image: mtsrus/syncmaster-backend:${TAG:-develop}
    restart: unless-stopped
    build:
      dockerfile: docker/Dockerfile.backend
      context: .
    ports:
      - 8000:8000
    env_file: .env.docker
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  worker:
    image: mtsrus/syncmaster-worker:${TAG:-develop}
    restart: unless-stopped
    build:
      dockerfile: docker/Dockerfile.worker
      context: .
    env_file: .env.docker
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

volumes:
  postgres_data:
  rabbitmq_data:
