name: Run All Tests
on:
  push:
    branches:
      - develop
  pull_request:
    branches-ignore:
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  DEFAULT_PYTHON: '3.12'

jobs:
  oracle_tests:
    name: Oracle tests
    uses: ./.github/workflows/oracle-tests.yml

  clickhouse_tests:
    name: Clickhouse tests
    uses: ./.github/workflows/clickhouse-tests.yml

  mysql_tests:
    name: MySQL tests
    uses: ./.github/workflows/mysql-tests.yml

  mssql_tests:
    name: MSSQL tests
    uses: ./.github/workflows/mssql-tests.yml

  hdfs_tests:
    name: HDFS tests
    uses: ./.github/workflows/hdfs-tests.yml

  hive_tests:
    name: Hive tests
    uses: ./.github/workflows/hive-tests.yml

  s3_tests:
    name: S3 tests
    uses: ./.github/workflows/s3-tests.yml

  scheduler_tests:
    name: Scheduler tests
    uses: ./.github/workflows/scheduler-tests.yml

  unit_tests:
    name: Unit tests
    uses: ./.github/workflows/unit-test.yml

  all_done:
    name: Tests done
    runs-on: ubuntu-latest

    needs: [oracle_tests, clickhouse_tests, mssql_tests, mysql_tests, hive_tests, hdfs_tests, s3_tests, unit_tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ env.DEFAULT_PYTHON }}-coverage

      - name: Upgrade pip
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install dependencies
        run: pip install -I coverage pytest

      - name: Download all coverage reports
        uses: actions/download-artifact@v4
        with:
          path: reports/
          pattern: coverage-*
          merge-multiple: true

      - name: Generate coverage reports
        run: |
          coverage combine
          coverage xml -o reports/coverage.xml -i

      - name: Check coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./reports/coverage.xml
          fail_ci_if_error: true
          plugin: noop

      - name: All done
        run: echo 1
