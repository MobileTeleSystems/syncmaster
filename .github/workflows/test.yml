name: Tests
on:
  push:
    branches:
      - develop
  pull_request:
    branches-ignore:
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  DEFAULT_PYTHON: '3.11'

jobs:
  tests:
    name: Run tests (Python 3.11, Pydantic v1 on ubuntu-latest)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    env:
      POETRY_VERSION: 1.7.1

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Worker image
        uses: docker/build-push-action@v5
        with:
          context: .
          target: test
          file: docker/worker.dockerfile
          cache-to: type=gha,mode=max
          cache-from: type=gha
          provenance: mode=max

      - name: Start Worker Container With Dependencies  # the next stage is to change from backend to worker
        run: |
          docker compose -f docker-compose.test.yml down -v --remove-orphans
          docker compose -f docker-compose.test.yml up --wait-timeout 5 -d
        env:
          COMPOSE_PROJECT_NAME: ${{ github.run_id }}-backend
          TAG: ${{ github.sha }}

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1

      - name: Cache poetry
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-python-${{ env.DEFAULT_PYTHON }}-codeql-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ env.DEFAULT_PYTHON }}-codeql-${{ hashFiles('**/poetry.lock') }}
            ${{ runner.os }}-python-${{ env.DEFAULT_PYTHON }}-codeql-
            ${{ runner.os }}-python
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          poetry install --no-root --with backend,dev,test

      - name: Run Tests
        run: |
          source .env.github
          mkdir -p reports/
          poetry run coverage run -m pytest

      - name: Shutdown Backend Container
        if: always()
        run: |
          docker compose -f docker-compose.test.yml down -v --remove-orphans
        env:
          COMPOSE_PROJECT_NAME: ${{ github.run_id }}-backend
